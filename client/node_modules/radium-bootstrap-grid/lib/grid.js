'use strict';

exports.__esModule = true;

var _container, _column, _xs, _ms, _sm, _md, _lg;

function createVariables() {
  var variables = {
    screenXS: 480,
    screenMS: 480,
    screenSM: 768,
    screenMD: 992,
    screenLG: 1200,
    gridColumns: 12,
    gridGutterWidth: 30
  };

  variables.screenXSMin = variables.screenXS;
  variables.screenMSMin = variables.screenMS;
  variables.screenSMMin = variables.screenSM;
  variables.screenMDMin = variables.screenMD;
  variables.screenLGMin = variables.screenLG;

  variables.screenXSMax = variables.screenMSMin - 1;
  variables.screenMSMax = variables.screenSMMin - 1;
  variables.screenSMMax = variables.screenMDMin - 1;
  variables.screenMDMax = variables.screenLGMin - 1;

  variables.containerMS = 480 + variables.gridGutterWidth;
  variables.containerSM = 720 + variables.gridGutterWidth;
  variables.containerMD = 940 + variables.gridGutterWidth;
  variables.containerLG = 1140 + variables.gridGutterWidth;

  return variables;
};
var variables = createVariables();

exports.variables = variables;
var mediaQueryXS = '@media (max-width: ' + variables.screenXSMax + 'px)';
var mediaQueryMS = '@media (min-width: ' + variables.screenMSMin + 'px) and (max-width: ' + variables.screenMSMax + 'px)';
var mediaQuerySM = '@media (min-width: ' + variables.screenSMMin + 'px) and (max-width: ' + variables.screenSMMax + 'px)';
var mediaQueryMD = '@media (min-width: ' + variables.screenMDMin + 'px) and (max-width: ' + variables.screenMDMax + 'px)';
var mediaQueryLG = '@media (min-width: ' + variables.screenLGMin + 'px)';

var container = (_container = {
  marginRight: 'auto',
  marginLeft: 'auto',
  paddingLeft: Math.floor(variables.gridGutterWidth / 2),
  paddingRight: Math.ceil(variables.gridGutterWidth / 2)
}, _container[mediaQuerySM] = {
  width: variables.containerSM
}, _container[mediaQueryMD] = {
  width: variables.containerMD
}, _container[mediaQueryLG] = {
  width: variables.containerLG
}, _container);

exports.container = container;
var row = {
  marginLeft: Math.ceil(variables.gridGutterWidth / -2),
  marginRight: Math.floor(variables.gridGutterWidth / -2)
};

exports.row = row;
var column = (_column = {
  position: 'relative',
  minHeight: '1px',
  paddingLeft: Math.ceil(variables.gridGutterWidth / 2),
  paddingRight: Math.floor(variables.gridGutterWidth / 2),
  float: 'left'
}, _column[mediaQueryMS] = {
  float: 'left'
}, _column[mediaQuerySM] = {
  float: 'left'
}, _column[mediaQueryMD] = {
  float: 'left'
}, _column[mediaQueryLG] = {
  float: 'left'
}, _column);

exports.column = column;
function createColumnWidth() {
  var xs = Array(variables.gridColumns + 1).fill(null).map(function (v, i) {
    return {
      width: (i / variables.gridColumns * 100).toFixed(5) + '%'
    };
  });
  var ms = Array(variables.gridColumns + 1).fill(null).map(function (v, i) {
    var _ref;

    return (_ref = {}, _ref[mediaQueryMS] = {
      width: (i / variables.gridColumns * 100).toFixed(5) + '%'
    }, _ref);
  });
  var sm = Array(variables.gridColumns + 1).fill(null).map(function (v, i) {
    var _ref2;

    return (_ref2 = {}, _ref2[mediaQuerySM] = {
      width: (i / variables.gridColumns * 100).toFixed(5) + '%'
    }, _ref2);
  });
  var md = Array(variables.gridColumns + 1).fill(null).map(function (v, i) {
    var _ref3;

    return (_ref3 = {}, _ref3[mediaQueryMD] = {
      width: (i / variables.gridColumns * 100).toFixed(5) + '%'
    }, _ref3);
  });
  var lg = Array(variables.gridColumns + 1).fill(null).map(function (v, i) {
    var _ref4;

    return (_ref4 = {}, _ref4[mediaQueryLG] = {
      width: (i / variables.gridColumns * 100).toFixed(5) + '%'
    }, _ref4);
  });

  return { xs: xs, ms: ms, sm: sm, md: md, lg: lg };
}
var columnWidth = createColumnWidth();

exports.columnWidth = columnWidth;
function createColumnOffset() {
  var xs = Array(variables.gridColumns + 1).fill(null).map(function (v, i) {
    return {
      marginLeft: (i / variables.gridColumns * 100).toFixed(5) + '%'
    };
  });
  var ms = Array(variables.gridColumns + 1).fill(null).map(function (v, i) {
    var _ref5;

    return (_ref5 = {}, _ref5[mediaQueryMS] = {
      marginLeft: (i / variables.gridColumns * 100).toFixed(5) + '%'
    }, _ref5);
  });
  var sm = Array(variables.gridColumns + 1).fill(null).map(function (v, i) {
    var _ref6;

    return (_ref6 = {}, _ref6[mediaQuerySM] = {
      marginLeft: (i / variables.gridColumns * 100).toFixed(5) + '%'
    }, _ref6);
  });
  var md = Array(variables.gridColumns + 1).fill(null).map(function (v, i) {
    var _ref7;

    return (_ref7 = {}, _ref7[mediaQueryMD] = {
      marginLeft: (i / variables.gridColumns * 100).toFixed(5) + '%'
    }, _ref7);
  });
  var lg = Array(variables.gridColumns + 1).fill(null).map(function (v, i) {
    var _ref8;

    return (_ref8 = {}, _ref8[mediaQueryLG] = {
      marginLeft: (i / variables.gridColumns * 100).toFixed(5) + '%'
    }, _ref8);
  });

  return { xs: xs, ms: ms, sm: sm, md: md, lg: lg };
}
var columnOffset = createColumnOffset();

exports.columnOffset = columnOffset;
function createColumnPull() {
  var xs = Array(variables.gridColumns + 1).fill(null).map(function (v, i) {
    return {
      right: (i / variables.gridColumns * 100).toFixed(5) + '%'
    };
  });
  var ms = Array(variables.gridColumns + 1).fill(null).map(function (v, i) {
    var _ref9;

    return (_ref9 = {}, _ref9[mediaQueryMS] = {
      right: (i / variables.gridColumns * 100).toFixed(5) + '%'
    }, _ref9);
  });
  var sm = Array(variables.gridColumns + 1).fill(null).map(function (v, i) {
    var _ref10;

    return (_ref10 = {}, _ref10[mediaQuerySM] = {
      right: (i / variables.gridColumns * 100).toFixed(5) + '%'
    }, _ref10);
  });
  var md = Array(variables.gridColumns + 1).fill(null).map(function (v, i) {
    var _ref11;

    return (_ref11 = {}, _ref11[mediaQueryMD] = {
      right: (i / variables.gridColumns * 100).toFixed(5) + '%'
    }, _ref11);
  });
  var lg = Array(variables.gridColumns + 1).fill(null).map(function (v, i) {
    var _ref12;

    return (_ref12 = {}, _ref12[mediaQueryLG] = {
      right: (i / variables.gridColumns * 100).toFixed(5) + '%'
    }, _ref12);
  });

  return { xs: xs, ms: ms, sm: sm, md: md, lg: lg };
}
var columnPull = createColumnPull();

exports.columnPull = columnPull;
function createColumnPush() {
  var xs = Array(variables.gridColumns + 1).fill(null).map(function (v, i) {
    return {
      left: (i / variables.gridColumns * 100).toFixed(5) + '%'
    };
  });
  var ms = Array(variables.gridColumns + 1).fill(null).map(function (v, i) {
    var _ref13;

    return (_ref13 = {}, _ref13[mediaQueryMS] = {
      left: (i / variables.gridColumns * 100).toFixed(5) + '%'
    }, _ref13);
  });
  var sm = Array(variables.gridColumns + 1).fill(null).map(function (v, i) {
    var _ref14;

    return (_ref14 = {}, _ref14[mediaQuerySM] = {
      left: (i / variables.gridColumns * 100).toFixed(5) + '%'
    }, _ref14);
  });
  var md = Array(variables.gridColumns + 1).fill(null).map(function (v, i) {
    var _ref15;

    return (_ref15 = {}, _ref15[mediaQueryMD] = {
      left: (i / variables.gridColumns * 100).toFixed(5) + '%'
    }, _ref15);
  });
  var lg = Array(variables.gridColumns + 1).fill(null).map(function (v, i) {
    var _ref16;

    return (_ref16 = {}, _ref16[mediaQueryLG] = {
      left: (i / variables.gridColumns * 100).toFixed(5) + '%'
    }, _ref16);
  });

  return { xs: xs, ms: ms, sm: sm, md: md, lg: lg };
}
var columnPush = createColumnPush();

exports.columnPush = columnPush;
var columnHidden = {
  xs: (_xs = {}, _xs[mediaQueryXS] = {
    display: 'none'
  }, _xs),
  ms: (_ms = {}, _ms[mediaQueryMS] = {
    display: 'none'
  }, _ms),
  sm: (_sm = {}, _sm[mediaQuerySM] = {
    display: 'none'
  }, _sm),
  md: (_md = {}, _md[mediaQueryMD] = {
    display: 'none'
  }, _md),
  lg: (_lg = {}, _lg[mediaQueryLG] = {
    display: 'none'
  }, _lg)
};

exports.columnHidden = columnHidden;
var clearfix = {
  clear: 'both'
};
exports.clearfix = clearfix;